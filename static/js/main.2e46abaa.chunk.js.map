{"version":3,"sources":["Circle.tsx","RandomRadii.tsx","HoverFill.tsx","Focus.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["withStyles","Circle","position","left","top","transition","marginLeft","props","concat","radius","marginTop","width","height","borderRadius","backgroundColor","color","display","alignItems","justifyContent","_ref","handleMouseEnter","handleMouseLeave","classes","children","react_default","a","createElement","onMouseEnter","onMouseLeave","className","RandomRadii","_useState","useState","_useState2","Object","slicedToArray","offset","setOffset","useEffect","id","setInterval","Math","random","clearInterval","src_Circle","circles","0","1","key","2","3","HoverFill","activeCircle","setActiveCircle","_","entries","map","_ref2","_ref3","_ref3$","Focus","focusText","isFocused","setFocused","style","fontSize","App","links","link","padding","textDecoration","&:hover","es","to","src_RandomRadii","path","src_HoverFill","src_Focus","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e46abaa.chunk.js","sourcesContent":["import React, { MouseEvent as ReactMouseEvent, ReactNode } from \"react\";\nimport withStyles, { WithStyles } from \"react-jss\";\n\nconst styles = {\n  Circle: {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transition: \"width 1s, height 1s, margin 1s\",\n    marginLeft: (props: Props) => `-${props.radius}vh`,\n    marginTop: (props: Props) => `-${props.radius}vh`,\n    width: (props: Props) => `${props.radius * 2}vh`,\n    height: (props: Props) => `${props.radius * 2}vh`,\n    borderRadius: \"50%\",\n    backgroundColor: (props: Props) => props.color,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n};\n\ninterface Props extends WithStyles<typeof styles> {\n  color: string;\n  radius: number;\n  children?: ReactNode;\n  handleMouseEnter?: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void;\n  handleMouseLeave?: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void;\n}\n\nconst Circle: React.FC<Props> = ({\n  handleMouseEnter,\n  handleMouseLeave,\n  classes,\n  children\n}) => {\n  return (\n    <div\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      className={classes.Circle}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Circle);\n","import React, {useEffect, useState} from \"react\"\nimport Circle from \"./Circle\";\nimport withStyles, {WithStyles} from \"react-jss\";\nimport {RouteComponentProps} from \"@reach/router\";\n\nconst styles = {\n  RandomRadii: {\n    width: \"100vw\",\n    height: \"100vh\",\n    position: \"relative\",\n  },\n};\n\ntype Props = WithStyles<typeof styles> & RouteComponentProps;\n\nconst RandomRadii: React.FunctionComponent<Props> = ({ classes }) => {\n  const [offset, setOffset] = useState(0);\n  useEffect(() => {\n    const id = setInterval(() => {\n      setOffset(Math.random());\n    }, Math.random() * 750)\n    return () => clearInterval(id)\n  });\n  return (\n    <div className={classes.RandomRadii}>\n      <Circle radius={40 + offset * Math.random() * 40} color=\"#0e79b2\"/>\n      <Circle radius={30 + offset * Math.random() * 30} color=\"#bf1363\"/>\n      <Circle radius={15 + offset * Math.random() * 15} color=\"#f39237\"/>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(RandomRadii);","import React, { MouseEvent, useState } from \"react\";\nimport Circle from \"./Circle\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport withStyles, { WithStyles } from \"react-jss\";\n\nconst circles = {\n  0: {\n    color: \"#ccdbdc\",\n    radius: 40\n  },\n  1: {\n    key: 2,\n    color: \"#80ced7\",\n    radius: 32\n  },\n  2: {\n    color: \"#007ea7\",\n    radius: 21\n  },\n  3: {\n    color: \"#003249\",\n    radius: 13\n  }\n};\n\nconst styles = {\n  HoverFill: {\n    width: \"100vw\",\n    height: \"100vh\",\n    position: \"relative\"\n  }\n};\n\nconst HoverFill: React.FunctionComponent<\n  RouteComponentProps & WithStyles<typeof styles>\n> = ({ classes }) => {\n  const [activeCircle, setActiveCircle] = useState(\"0\");\n  const handleMouseEnter = (id: string) => (_: MouseEvent) => {\n    setActiveCircle(id);\n  };\n  const handleMouseLeave = (_: MouseEvent) => {\n    setActiveCircle(\"-1\");\n  };\n\n  return (\n    <div className={classes.HoverFill}>\n      {Object.entries(circles).map(([id, { color, radius }]) => (\n        <div key={id}>\n          <Circle\n            key={2}\n            color={color}\n            radius={activeCircle === id ? circles[0].radius : radius}\n          />\n          <Circle\n            key={1}\n            color={color}\n            handleMouseEnter={handleMouseEnter(id)}\n            handleMouseLeave={handleMouseLeave}\n            radius={radius}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HoverFill);\n","import React, { useEffect, useState } from \"react\";\nimport Circle from \"./Circle\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport withStyles, { WithStyles } from \"react-jss\";\n\nconst styles = {\n  Focus: {\n    width: \"100vw\",\n    height: \"100vh\",\n    position: \"relative\"\n  },\n  focusText: {\n    transition: \"font-size 1s\"\n  }\n};\nconst Focus: React.FunctionComponent<\n  RouteComponentProps & WithStyles<typeof styles>\n> = ({ classes }) => {\n  const [isFocused, setFocused] = useState(false);\n  useEffect(() => {\n    const id = setInterval(() => {\n      setFocused(!isFocused);\n    }, 2000);\n    return () => clearInterval(id);\n  });\n  if (isFocused) {\n    return (\n      <div className={classes.Focus}>\n        <Circle color={\"#f4faff\"} radius={50} />\n        <Circle color={\"#86bbd8\"} radius={36} />\n        <Circle color={\"#048ba8\"} radius={16} />\n        <Circle color={\"#33658a\"} radius={4}>\n          <div style={{ fontSize: \"0.75rem\" }} className={classes.focusText}>\n            Focus\n          </div>\n        </Circle>\n      </div>\n    );\n  }\n  return (\n    <div className={classes.Focus}>\n      <Circle color={\"#f4faff\"} radius={50} />\n      <Circle color={\"#86bbd8\"} radius={30} />\n      <Circle color={\"#048ba8\"} radius={20} />\n      <Circle color={\"#33658a\"} radius={10}>\n        <div style={{ fontSize: \"2rem\" }} className={classes.focusText}>\n          Focus\n        </div>\n      </Circle>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Focus);\n","import React from \"react\";\nimport withStyles, { WithStyles } from \"react-jss\";\nimport RandomRadii from \"./RandomRadii\";\nimport HoverFill from \"./HoverFill\";\nimport { Link, Router } from \"@reach/router\";\nimport Focus from \"./Focus\";\n\nconst styles = {\n  App: {\n    width: \"100vw\",\n    position: \"relative\"\n  },\n  links: {\n    display: \"flex\"\n  },\n  link: {\n    padding: \"10px\",\n    fontSize: \"1.1em\",\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\"\n    }\n  }\n};\n\ntype Props = WithStyles<typeof styles>;\n\nconst App: React.FC<Props> = ({ classes }) => {\n  return (\n    <div className={classes.App}>\n      <div className={classes.links}>\n        <Link to=\"/random-radii\">\n          {\" \"}\n          <span className={classes.link}> Random Radii </span>\n        </Link>\n        <Link to=\"/hover-fill\">\n          {\" \"}\n          <span className={classes.link}> Hover Fill </span>{\" \"}\n        </Link>\n        <Link to=\"/focus\">\n          {\" \"}\n          <span className={classes.link}> Focus </span>{\" \"}\n        </Link>\n      </div>\n      <Router>\n        <RandomRadii path=\"/random-radii\" />\n        <HoverFill path=\"/hover-fill\" />\n        <Focus path=\"/focus\" />\n      </Router>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}